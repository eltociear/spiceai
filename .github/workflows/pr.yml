---
name: pr

on:
  pull_request:
    branches:
      - trunk
      - release-*
      - feature-*

  workflow_dispatch:

jobs:
  lint:
    name: Run Go & Rust Linters
    runs-on: aws-rust
    # env:
    #   GOVER: 1.22.0

    steps:
      - uses: actions/checkout@v4

      # - name: Set up Go
      #   uses: actions/setup-go@v5
      #   with:
      #     go-version: ${{ env.GOVER }}
      #     cache: false

      - name: Install golangci-lint
        run: |
          if ! command -v golangci-lint &> /dev/null ; then
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
          fi

      # - name: Set up Rust
      #   uses: ./.github/actions/setup-rust
      #   with:
      #     os: 'linux'
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ATHENA_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_ATHENA_SECRET_ACCESS_KEY }}
      
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          export PATH=$PATH:$HOME/go/bin:$HOME/.cargo/bin
          export CARGO_NET_GIT_FETCH_WITH_CLI=true
          make OPT_LEVEL=ci-dev lint

      - name: Check if Cargo.lock is updated
        run: |
          if git diff --exit-code Cargo.lock; then
            echo "Cargo.lock is up to date"
          else
            echo "Update Cargo.lock"
            exit 1
          fi

  build:
    name: Build Go & Rust
    runs-on: aws-rust
    # env:
    #   GOVER: 1.22.0

    steps:
      - uses: actions/checkout@v4

      # - name: Set up Go
      #   uses: actions/setup-go@v5
      #   with:
      #     go-version: ${{ env.GOVER }}
      #     cache: false

      # - name: Set up Rust
      #   uses: ./.github/actions/setup-rust
      #   with:
      #     os: 'linux'
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ATHENA_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_ATHENA_SECRET_ACCESS_KEY }}

      - run: |
          export PATH=$PATH:$HOME/go/bin:$HOME/.cargo/bin
          export CARGO_NET_GIT_FETCH_WITH_CLI=true
          make OPT_LEVEL=ci-dev ci test

  # build-docker:
  #   name: Build Docker Image
  #   runs-on: ubuntu-

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Build and push Docker images
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         file: Dockerfile
  #         platforms: linux/amd64
  #         push: false
  #         build-args: |
  #           CARGO_FEATURES=odbc
  #         tags: |
  #           ghcr.io/spiceai/spiceai-rust:ci
